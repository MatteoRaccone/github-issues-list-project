[{"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/index.js":"1","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/containers/IssueListPage.js":"2","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/Footer.js":"3","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/containers/IssueDetailPage.js":"4","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/IssueCard.js":"5","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/Header.js":"6"},{"size":506,"mtime":1607304600130,"results":"7","hashOfConfig":"8"},{"size":2591,"mtime":1607304600127,"results":"9","hashOfConfig":"8"},{"size":1145,"mtime":1607304600122,"results":"10","hashOfConfig":"8"},{"size":184,"mtime":1607304600127,"results":"11","hashOfConfig":"8"},{"size":2088,"mtime":1607340274303,"results":"12","hashOfConfig":"8"},{"size":857,"mtime":1607304600124,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5gobw",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/index.js",[],["28","29"],"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/containers/IssueListPage.js",["30"],"import React, { Component} from 'react';\nimport Paginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport { Breadcrumb} from 'react-bootstrap';\nimport IssueList from '../components/IssueList';\nimport { getIssues, getOpenIssueCount } from '../lib/api';\nimport opened from './opened.svg';\nimport rep from './rep.png';\n\nclass IssueListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      issues: [],\n      openIssues: -1,\n      pageLinks: {}\n    };\n  }\n\n  componentDidMount() {\n    const org= 'facebook';\n    const repo = 'react';\n    \n    // Fetch the number of open issues\n    getOpenIssueCount(org, repo)\n      .then(openIssues => {\n        this.setState({ openIssues });\n      })\n      .catch(error => {\n        this.setState({ openIssues: -1 });\n      });\n\n    this.fetchIssues(1);\n  }\n\n  fetchIssues(page) {\n    const org= 'facebook';\n    const repo = 'react';\n\n    getIssues(org, repo, page)\n      .then(issueResponse => {\n        this.setState({\n          pageCount: issueResponse.pageCount,\n          pageLinks: issueResponse.pageLinks,\n          issues: issueResponse.data,\n          loading: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          pageCount: 0,\n          pageLinks: {},\n          issues: [],\n          loading: false\n        });\n      });\n  }\n\n  handlePageChange = ({ selected }) => {\n    this.fetchIssues(selected + 1);\n  }\n\n  render() {\n    const org= 'facebook';\n    const repo = 'react';\n    const {openIssues, issues, loading, pageCount} = this.state;\n    \n    return (\n      <>\n        <Breadcrumb className =\"sub-header\">\n        <span><img src={rep} alt=\"rep\" className=\"repo-icon\"/></span>\n          <Breadcrumb.Item href=\"#\">{org}</Breadcrumb.Item>\n          <Breadcrumb.Item active href=\"#\">{repo}</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className=\"box-header container\">\n          <div className=\"m-0 pb-3 pt-3 px-0\">\n            <span className=\"opened\">\n              <img src={opened} alt=\"opened\" />\n            </span>\n            <span className=\"m-0\">{openIssues > -1 ? openIssues : '--'} open</span>\n          </div>\n        </div>\n        <div>\n        {loading ? <span>Loading...</span> : <IssueList issues={issues}/>}\n        <div className=\"issues-pagination\">\n        <Paginate\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageChange} \n        />\n        </div>\n        </div>\n      </>\n    );\n  }\n}\n\n\n\nexport default IssueListPage;","/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/Footer.js",[],"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/containers/IssueDetailPage.js",[],"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/IssueCard.js",["31"],"/Users/matteoraccone/Desktop/lavoro/github clone project/github-issues-list-project/src/components/Header.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":17},{"ruleId":"40","severity":1,"message":"41","line":24,"column":15,"nodeType":"42","endLine":24,"endColumn":51},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]